{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["initialState","useState","timeoutRef","useRef","useEffect","clearTimeout","state","newState","delay","setState","setTimeout","App","useDelayedState","setDelay","updating","setUpdating","className","type","placeholder","onChange","e","target","value","htmlFor","id","name","min","max","step","ReactDOM","render","document","getElementById"],"mappings":"0MAEe,SAAyBA,GAAc,MAC1BC,mBAA1B,GADoD,mBAC9C,EAD8C,KAC9C,EAD8C,KAE9CC,EAAaC,mBA6BnB,OANAC,qBAAU,WACR,OAAO,WACDF,EAAJ,SAAwBG,aAAaH,EAAbG,YAF5BD,IAMO,CAACE,EA3Bc,SAACC,EAAUC,GAC3BA,YAAJ,IAAmBA,EACjBC,MAEIP,EAAJ,SACEG,aAAaH,EAAbG,SAEFH,UAAqBQ,YAAW,WAC9BD,KACAP,iBAFFA,KAOmB,WACjBA,EAAJ,UACEG,aAAaH,EAAbG,SACAH,mBCsCSS,EAzDH,WAAO,IAAD,EAC0BC,EAAgB,IAD1C,mBACTN,EADS,KACFG,EADE,aAEUR,mBAAS,MAFnB,mBAETO,EAFS,KAEFK,EAFE,OAGmCD,GACjD,kBAAM,KAJQ,mBAGTE,EAHS,KAGCC,EAHD,UAehB,OALAX,qBAAU,WACRW,GAAY,kBAAM,KAClBA,GAAY,kBAAM,IAAO,OACxB,CAACT,IAGF,6BACE,uBAAGU,UAAU,eAAb,yFAIA,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBACb,8BACE,+CAEA,8BACEC,KAAK,OACLC,YAAY,iBACZC,SAvBZ,SAAsBC,GACpBX,EAASW,EAAEC,OAAOC,MAAOd,MAwBjB,2BAAOe,QAAQ,SAAf,2BAA4Cf,EAA5C,OACA,2BACES,KAAK,QACLO,GAAG,QACHC,KAAK,QACLH,MAAOd,EACPkB,IAAK,EACLC,IAAK,IACLC,KAAM,GACNT,SAAU,SAACC,GACTP,EAASO,EAAEC,OAAOC,YAK1B,yBAAKN,UAAU,kBACb,8BACE,+CACA,uBAAGA,UAAWF,EAAW,WAAa,IAAKR,QC/CvDuB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.3f302ad0.chunk.js","sourcesContent":["import { useEffect, useState, useRef } from 'react'\n\nexport default function useDelayedState(initialState) {\n  const [state, setState] = useState(initialState)\n  const timeoutRef = useRef()\n\n  const setStateAfter = (newState, delay) => {\n    if (delay === 0 || delay === undefined) {\n      setState(newState)\n    } else {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current)\n      }\n      timeoutRef.current = setTimeout(() => {\n        setState(newState)\n        timeoutRef.current = null\n      }, delay)\n    }\n  }\n\n  const cancelSetState = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current)\n      timeoutRef.current = null\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) clearTimeout(timeoutRef.current)\n    }\n  }, [])\n\n  return [state, setStateAfter, cancelSetState]\n}\n","import React, { useState, useEffect } from 'react'\n\nimport useDelayedState from 'use-delayed-state'\n\nconst App = () => {\n  const [state, setState, cancelSetState] = useDelayedState('')\n  const [delay, setDelay] = useState(900)\n  const [updating, setUpdating, cancelSetUpdating] = useDelayedState(\n    () => false\n  )\n  function handleChange(e) {\n    setState(e.target.value, delay)\n  }\n\n  useEffect(() => {\n    setUpdating(() => true)\n    setUpdating(() => false, 1000)\n  }, [state])\n\n  return (\n    <div>\n      <p className='description'>\n        In this example while user is typing, state is updated only after\n        passing delay time.\n      </p>\n      <div className='container'>\n        <div className='form-container'>\n          <form>\n            <h4>Real-time value</h4>\n\n            <textarea\n              type='text'\n              placeholder='Type something'\n              onChange={handleChange}\n            />\n            <label htmlFor='delay'>{`Debouncing delay ${delay}ms`}</label>\n            <input\n              type='range'\n              id='delay'\n              name='delay'\n              value={delay}\n              min={0}\n              max={2000}\n              step={20}\n              onChange={(e) => {\n                setDelay(e.target.value)\n              }}\n            />\n          </form>\n        </div>\n        <div className='form-container'>\n          <form>\n            <h4>Debounced State</h4>\n            <p className={updating ? 'updating' : ''}>{state}</p>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}